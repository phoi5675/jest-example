@startuml 2_unit_test_overview
mainframe **Unit testing overview - handler**
hide stereotype

skinparam linetype ortho
skinparam <<transparent>> {
  ComponentStyle rectangle
  ComponentFontColor transparent
  ComponentBackgroundColor transparent
  ComponentBorderColor transparent
}

skinparam <<mocked>> {
  PackageBackgroundColor LightSlateGray
  RectangleBackgroundColor LightSlateGray
  DatabaseBackgroundColor LightSlateGray
  ComponentBackgroundColor LightSlateGray 
}

skinparam component {
  BackgroundColor<<focused>> LightGreen
}


skinparam DefaultTextAlignment left

package "Mocked frontend" <<mocked>> AS mocked_frontend {
  package Frontend <<mocked>> {
    rectangle "API Services" <<mocked>> AS api_services 
  }

}
  queue "request"
  queue "response"

cloud Backend {
  rectangle handler {
    component "(POST) /auth/login handler" <<focused>> AS login_handler
    component "(GET/PATCH) /navigation handler" AS nav_handler

    login_handler -down[hidden]- nav_handler
  }
  rectangle service <<mocked>> {
    component "(POST) /auth/login service" <<mocked>> AS login_service
    component "(GET/PATCH) /navigation service" <<mocked>> AS nav_service

    login_service -down[hidden]- nav_service
  }
}

database DB <<mocked>> {
  component trasparent1 <<transparent>>
  component transparent2 <<transparent>>

  trasparent1 -down[hidden]- transparent2
}

request -down[hidden]- response

Frontend - request
handler <- request

Frontend <- response
handler -right- response

Frontend -right[hidden]- Backend
Backend -right[hidden]- DB
service <-right-> DB

handler <----> service

note right of login_handler
  Unit test에서는 하이라이트된
  <back:limegreen>(POST) /auth/login handler 함수 이외에
  <back:limegreen>모든 I/O, function 및 database는 **mock**을 사용함
end note

@enduml